diff --git a/cuda/sample_consensus/src/sac_model_1point_plane.cu b/cuda/sample_consensus/src/sac_model_1point_plane.cu
index 5b88565..78cea0f 100644
--- a/cuda/sample_consensus/src/sac_model_1point_plane.cu
+++ b/cuda/sample_consensus/src/sac_model_1point_plane.cu
@@ -383,14 +383,14 @@ namespace pcl
     template <typename Tuple> bool
     CountPlanarInlier::operator () (const Tuple &t)
     {
-      if (!isfinite (thrust::get<0>(t).x))
+      if (!isfinite (thrust::raw_reference_cast(thrust::get<0>(t)).x))
         return (false);
 
       //TODO: make threshold adaptive, depending on z
 
-      return (fabs (thrust::get<0>(t).x * coefficients.x +
-                    thrust::get<0>(t).y * coefficients.y +
-                    thrust::get<0>(t).z * coefficients.z + coefficients.w) < threshold);
+      return (fabs (thrust::raw_reference_cast(thrust::get<0>(t)).x * coefficients.x +
+                    thrust::raw_reference_cast(thrust::get<0>(t)).y * coefficients.y +
+                    thrust::raw_reference_cast(thrust::get<0>(t)).z * coefficients.z + coefficients.w) < threshold);
     }
 
     //////////////////////////////////////////////////////////////////////////
diff --git a/cuda/sample_consensus/src/sac_model_plane.cu b/cuda/sample_consensus/src/sac_model_plane.cu
index faa6710..49cc4a9 100644
--- a/cuda/sample_consensus/src/sac_model_plane.cu
+++ b/cuda/sample_consensus/src/sac_model_plane.cu
@@ -192,12 +192,12 @@ namespace pcl
     template <typename Tuple> bool
     CountPlanarInlier::operator () (const Tuple &t)
     {
-      if (!isfinite (thrust::get<0>(t).x))
+      if (!isfinite (thrust::raw_reference_cast(thrust::get<0>(t)).x))
         return (false);
 
-      return (fabs (thrust::get<0>(t).x * coefficients.x +
-                    thrust::get<0>(t).y * coefficients.y +
-                    thrust::get<0>(t).z * coefficients.z + coefficients.w) < threshold);
+      return (fabs (thrust::raw_reference_cast(thrust::get<0>(t)).x * coefficients.x +
+                    thrust::raw_reference_cast(thrust::get<0>(t)).y * coefficients.y +
+                    thrust::raw_reference_cast(thrust::get<0>(t)).z * coefficients.z + coefficients.w) < threshold);
     }
 
     //////////////////////////////////////////////////////////////////////////
diff --git a/gpu/people/CMakeLists.txt b/gpu/people/CMakeLists.txt
index f153833..89b19cc 100644
--- a/gpu/people/CMakeLists.txt
+++ b/gpu/people/CMakeLists.txt
@@ -20,10 +20,19 @@ if(build)
 	find_cuda_helper_libs(npp)
   else()
     find_cuda_helper_libs(nppc)
-    find_cuda_helper_libs(nppi)
     find_cuda_helper_libs(npps)
+    if(${CUDA_VERSION} VERSION_GREATER_EQUAL "9.0")
+      find_cuda_helper_libs(nppim)
+      find_cuda_helper_libs(nppidei)
+    else()
+      find_cuda_helper_libs(nppi)
+    endif()
 
-    set(CUDA_npp_LIBRARY ${CUDA_nppc_LIBRARY} ${CUDA_nppi_LIBRARY} ${CUDA_npps_LIBRARY} CACHE STRING "npp library")
+    if(${CUDA_VERSION} VERSION_GREATER_EQUAL "9.0")
+      set(CUDA_npp_LIBRARY ${CUDA_nppc_LIBRARY} ${CUDA_nppim_LIBRARY} ${CUDA_nppidei_LIBRARY} ${CUDA_npps_LIBRARY} CACHE STRING "npp library")
+    else()
+      set(CUDA_npp_LIBRARY ${CUDA_nppc_LIBRARY} ${CUDA_nppi_LIBRARY} ${CUDA_npps_LIBRARY} CACHE STRING "npp library")
+    endif()
   endif()
 
   #Label_skeleton
